#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QBIX_Test
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QbixTest")]
	public partial class QbixDataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Определения метода расширяемости
    partial void OnCreated();
    partial void InsertPositions(Positions instance);
    partial void UpdatePositions(Positions instance);
    partial void DeletePositions(Positions instance);
    partial void InsertEmployeeSkills(EmployeeSkills instance);
    partial void UpdateEmployeeSkills(EmployeeSkills instance);
    partial void DeleteEmployeeSkills(EmployeeSkills instance);
    partial void InsertDepartaments(Departaments instance);
    partial void UpdateDepartaments(Departaments instance);
    partial void DeleteDepartaments(Departaments instance);
    partial void InsertPositionSkills(PositionSkills instance);
    partial void UpdatePositionSkills(PositionSkills instance);
    partial void DeletePositionSkills(PositionSkills instance);
    partial void InsertEmployees(Employees instance);
    partial void UpdateEmployees(Employees instance);
    partial void DeleteEmployees(Employees instance);
    #endregion
		
		public QbixDataClassesDataContext() : 
				base(global::QBIX_Test.Properties.Settings.Default.QbixTestConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QbixDataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QbixDataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QbixDataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QbixDataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Positions> Positions
		{
			get
			{
				return this.GetTable<Positions>();
			}
		}
		
		public System.Data.Linq.Table<EmployeeSkills> EmployeeSkills
		{
			get
			{
				return this.GetTable<EmployeeSkills>();
			}
		}
		
		public System.Data.Linq.Table<Departaments> Departaments
		{
			get
			{
				return this.GetTable<Departaments>();
			}
		}
		
		public System.Data.Linq.Table<vEmployeesDs> vEmployeesDs
		{
			get
			{
				return this.GetTable<vEmployeesDs>();
			}
		}
		
		public System.Data.Linq.Table<PositionSkills> PositionSkills
		{
			get
			{
				return this.GetTable<PositionSkills>();
			}
		}
		
		public System.Data.Linq.Table<Employees> Employees
		{
			get
			{
				return this.GetTable<Employees>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeportamentDelete")]
		public int DeportamentDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="DeportamentUid", DbType="UniqueIdentifier")] System.Nullable<System.Guid> deportamentUid)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), deportamentUid);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.PositionDelete")]
		public int PositionDelete([global::System.Data.Linq.Mapping.ParameterAttribute(Name="PositionUid", DbType="UniqueIdentifier")] System.Nullable<System.Guid> positionUid)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), positionUid);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Positions")]
	public partial class Positions : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _PositionUid;
		
		private System.Guid _DepartamenUid;
		
		private string _Name;
		
		private string _Description;
		
		private EntitySet<PositionSkills> _PositionSkills;
		
		private EntitySet<Employees> _Employees;
		
		private EntityRef<Departaments> _Departaments;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPositionUidChanging(System.Guid value);
    partial void OnPositionUidChanged();
    partial void OnDepartamenUidChanging(System.Guid value);
    partial void OnDepartamenUidChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Positions()
		{
			this._PositionSkills = new EntitySet<PositionSkills>(new Action<PositionSkills>(this.attach_PositionSkills), new Action<PositionSkills>(this.detach_PositionSkills));
			this._Employees = new EntitySet<Employees>(new Action<Employees>(this.attach_Employees), new Action<Employees>(this.detach_Employees));
			this._Departaments = default(EntityRef<Departaments>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionUid", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PositionUid
		{
			get
			{
				return this._PositionUid;
			}
			set
			{
				if ((this._PositionUid != value))
				{
					this.OnPositionUidChanging(value);
					this.SendPropertyChanging();
					this._PositionUid = value;
					this.SendPropertyChanged("PositionUid");
					this.OnPositionUidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartamenUid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid DepartamenUid
		{
			get
			{
				return this._DepartamenUid;
			}
			set
			{
				if ((this._DepartamenUid != value))
				{
					if (this._Departaments.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartamenUidChanging(value);
					this.SendPropertyChanging();
					this._DepartamenUid = value;
					this.SendPropertyChanged("DepartamenUid");
					this.OnDepartamenUidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(300)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Positions_PositionSkills", Storage="_PositionSkills", ThisKey="PositionUid", OtherKey="PositionUid")]
		public EntitySet<PositionSkills> PositionSkills
		{
			get
			{
				return this._PositionSkills;
			}
			set
			{
				this._PositionSkills.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Positions_Employees", Storage="_Employees", ThisKey="PositionUid", OtherKey="PositionUid")]
		public EntitySet<Employees> Employees
		{
			get
			{
				return this._Employees;
			}
			set
			{
				this._Employees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Departaments_Positions", Storage="_Departaments", ThisKey="DepartamenUid", OtherKey="DepartamentUid", IsForeignKey=true)]
		public Departaments Departaments
		{
			get
			{
				return this._Departaments.Entity;
			}
			set
			{
				Departaments previousValue = this._Departaments.Entity;
				if (((previousValue != value) 
							|| (this._Departaments.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Departaments.Entity = null;
						previousValue.Positions.Remove(this);
					}
					this._Departaments.Entity = value;
					if ((value != null))
					{
						value.Positions.Add(this);
						this._DepartamenUid = value.DepartamentUid;
					}
					else
					{
						this._DepartamenUid = default(System.Guid);
					}
					this.SendPropertyChanged("Departaments");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PositionSkills(PositionSkills entity)
		{
			this.SendPropertyChanging();
			entity.Positions = this;
		}
		
		private void detach_PositionSkills(PositionSkills entity)
		{
			this.SendPropertyChanging();
			entity.Positions = null;
		}
		
		private void attach_Employees(Employees entity)
		{
			this.SendPropertyChanging();
			entity.Positions = this;
		}
		
		private void detach_Employees(Employees entity)
		{
			this.SendPropertyChanging();
			entity.Positions = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmployeeSkills")]
	public partial class EmployeeSkills : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _EmployeeSkillUid;
		
		private System.Guid _EmployeeUid;
		
		private System.Guid _SkillUid;
		
		private EntityRef<PositionSkills> _PositionSkills;
		
		private EntityRef<Employees> _Employees;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployeeSkillUidChanging(System.Guid value);
    partial void OnEmployeeSkillUidChanged();
    partial void OnEmployeeUidChanging(System.Guid value);
    partial void OnEmployeeUidChanged();
    partial void OnSkillUidChanging(System.Guid value);
    partial void OnSkillUidChanged();
    #endregion
		
		public EmployeeSkills()
		{
			this._PositionSkills = default(EntityRef<PositionSkills>);
			this._Employees = default(EntityRef<Employees>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeSkillUid", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid EmployeeSkillUid
		{
			get
			{
				return this._EmployeeSkillUid;
			}
			set
			{
				if ((this._EmployeeSkillUid != value))
				{
					this.OnEmployeeSkillUidChanging(value);
					this.SendPropertyChanging();
					this._EmployeeSkillUid = value;
					this.SendPropertyChanged("EmployeeSkillUid");
					this.OnEmployeeSkillUidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeUid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid EmployeeUid
		{
			get
			{
				return this._EmployeeUid;
			}
			set
			{
				if ((this._EmployeeUid != value))
				{
					if (this._Employees.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeUidChanging(value);
					this.SendPropertyChanging();
					this._EmployeeUid = value;
					this.SendPropertyChanged("EmployeeUid");
					this.OnEmployeeUidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkillUid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid SkillUid
		{
			get
			{
				return this._SkillUid;
			}
			set
			{
				if ((this._SkillUid != value))
				{
					if (this._PositionSkills.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSkillUidChanging(value);
					this.SendPropertyChanging();
					this._SkillUid = value;
					this.SendPropertyChanged("SkillUid");
					this.OnSkillUidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PositionSkills_EmployeeSkills", Storage="_PositionSkills", ThisKey="SkillUid", OtherKey="SkillUid", IsForeignKey=true)]
		public PositionSkills PositionSkills
		{
			get
			{
				return this._PositionSkills.Entity;
			}
			set
			{
				PositionSkills previousValue = this._PositionSkills.Entity;
				if (((previousValue != value) 
							|| (this._PositionSkills.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PositionSkills.Entity = null;
						previousValue.EmployeeSkills.Remove(this);
					}
					this._PositionSkills.Entity = value;
					if ((value != null))
					{
						value.EmployeeSkills.Add(this);
						this._SkillUid = value.SkillUid;
					}
					else
					{
						this._SkillUid = default(System.Guid);
					}
					this.SendPropertyChanged("PositionSkills");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employees_EmployeeSkills", Storage="_Employees", ThisKey="EmployeeUid", OtherKey="EmployeeUid", IsForeignKey=true)]
		public Employees Employees
		{
			get
			{
				return this._Employees.Entity;
			}
			set
			{
				Employees previousValue = this._Employees.Entity;
				if (((previousValue != value) 
							|| (this._Employees.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employees.Entity = null;
						previousValue.EmployeeSkills.Remove(this);
					}
					this._Employees.Entity = value;
					if ((value != null))
					{
						value.EmployeeSkills.Add(this);
						this._EmployeeUid = value.EmployeeUid;
					}
					else
					{
						this._EmployeeUid = default(System.Guid);
					}
					this.SendPropertyChanged("Employees");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Departaments")]
	public partial class Departaments : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _DepartamentUid;
		
		private string _Name;
		
		private EntitySet<Positions> _Positions;
		
		private EntitySet<Employees> _Employees;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDepartamentUidChanging(System.Guid value);
    partial void OnDepartamentUidChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Departaments()
		{
			this._Positions = new EntitySet<Positions>(new Action<Positions>(this.attach_Positions), new Action<Positions>(this.detach_Positions));
			this._Employees = new EntitySet<Employees>(new Action<Employees>(this.attach_Employees), new Action<Employees>(this.detach_Employees));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartamentUid", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid DepartamentUid
		{
			get
			{
				return this._DepartamentUid;
			}
			set
			{
				if ((this._DepartamentUid != value))
				{
					this.OnDepartamentUidChanging(value);
					this.SendPropertyChanging();
					this._DepartamentUid = value;
					this.SendPropertyChanged("DepartamentUid");
					this.OnDepartamentUidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Departaments_Positions", Storage="_Positions", ThisKey="DepartamentUid", OtherKey="DepartamenUid")]
		public EntitySet<Positions> Positions
		{
			get
			{
				return this._Positions;
			}
			set
			{
				this._Positions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Departaments_Employees", Storage="_Employees", ThisKey="DepartamentUid", OtherKey="DepartamentUid")]
		public EntitySet<Employees> Employees
		{
			get
			{
				return this._Employees;
			}
			set
			{
				this._Employees.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Positions(Positions entity)
		{
			this.SendPropertyChanging();
			entity.Departaments = this;
		}
		
		private void detach_Positions(Positions entity)
		{
			this.SendPropertyChanging();
			entity.Departaments = null;
		}
		
		private void attach_Employees(Employees entity)
		{
			this.SendPropertyChanging();
			entity.Departaments = this;
		}
		
		private void detach_Employees(Employees entity)
		{
			this.SendPropertyChanging();
			entity.Departaments = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vEmployeesDs")]
	public partial class vEmployeesDs
	{
		
		private System.Guid _EmployeeUid;
		
		private System.Guid _DepartamentUid;
		
		private string _SNP;
		
		private string _PositionName;
		
		private System.Nullable<System.DateTime> _DtHired;
		
		private System.Nullable<System.DateTime> _DtDismissed;
		
		public vEmployeesDs()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeUid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid EmployeeUid
		{
			get
			{
				return this._EmployeeUid;
			}
			set
			{
				if ((this._EmployeeUid != value))
				{
					this._EmployeeUid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartamentUid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid DepartamentUid
		{
			get
			{
				return this._DepartamentUid;
			}
			set
			{
				if ((this._DepartamentUid != value))
				{
					this._DepartamentUid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SNP", DbType="VarChar(152) NOT NULL", CanBeNull=false)]
		public string SNP
		{
			get
			{
				return this._SNP;
			}
			set
			{
				if ((this._SNP != value))
				{
					this._SNP = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string PositionName
		{
			get
			{
				return this._PositionName;
			}
			set
			{
				if ((this._PositionName != value))
				{
					this._PositionName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DtHired", DbType="Date")]
		public System.Nullable<System.DateTime> DtHired
		{
			get
			{
				return this._DtHired;
			}
			set
			{
				if ((this._DtHired != value))
				{
					this._DtHired = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DtDismissed", DbType="Date")]
		public System.Nullable<System.DateTime> DtDismissed
		{
			get
			{
				return this._DtDismissed;
			}
			set
			{
				if ((this._DtDismissed != value))
				{
					this._DtDismissed = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PositionSkills")]
	public partial class PositionSkills : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _SkillUid;
		
		private System.Guid _PositionUid;
		
		private string _Name;
		
		private EntitySet<EmployeeSkills> _EmployeeSkills;
		
		private EntityRef<Positions> _Positions;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSkillUidChanging(System.Guid value);
    partial void OnSkillUidChanged();
    partial void OnPositionUidChanging(System.Guid value);
    partial void OnPositionUidChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public PositionSkills()
		{
			this._EmployeeSkills = new EntitySet<EmployeeSkills>(new Action<EmployeeSkills>(this.attach_EmployeeSkills), new Action<EmployeeSkills>(this.detach_EmployeeSkills));
			this._Positions = default(EntityRef<Positions>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkillUid", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid SkillUid
		{
			get
			{
				return this._SkillUid;
			}
			set
			{
				if ((this._SkillUid != value))
				{
					this.OnSkillUidChanging(value);
					this.SendPropertyChanging();
					this._SkillUid = value;
					this.SendPropertyChanged("SkillUid");
					this.OnSkillUidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionUid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PositionUid
		{
			get
			{
				return this._PositionUid;
			}
			set
			{
				if ((this._PositionUid != value))
				{
					if (this._Positions.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPositionUidChanging(value);
					this.SendPropertyChanging();
					this._PositionUid = value;
					this.SendPropertyChanged("PositionUid");
					this.OnPositionUidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PositionSkills_EmployeeSkills", Storage="_EmployeeSkills", ThisKey="SkillUid", OtherKey="SkillUid")]
		public EntitySet<EmployeeSkills> EmployeeSkills
		{
			get
			{
				return this._EmployeeSkills;
			}
			set
			{
				this._EmployeeSkills.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Positions_PositionSkills", Storage="_Positions", ThisKey="PositionUid", OtherKey="PositionUid", IsForeignKey=true)]
		public Positions Positions
		{
			get
			{
				return this._Positions.Entity;
			}
			set
			{
				Positions previousValue = this._Positions.Entity;
				if (((previousValue != value) 
							|| (this._Positions.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Positions.Entity = null;
						previousValue.PositionSkills.Remove(this);
					}
					this._Positions.Entity = value;
					if ((value != null))
					{
						value.PositionSkills.Add(this);
						this._PositionUid = value.PositionUid;
					}
					else
					{
						this._PositionUid = default(System.Guid);
					}
					this.SendPropertyChanged("Positions");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EmployeeSkills(EmployeeSkills entity)
		{
			this.SendPropertyChanging();
			entity.PositionSkills = this;
		}
		
		private void detach_EmployeeSkills(EmployeeSkills entity)
		{
			this.SendPropertyChanging();
			entity.PositionSkills = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employees")]
	public partial class Employees : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _EmployeeUid;
		
		private System.Guid _DepartamentUid;
		
		private System.Guid _PositionUid;
		
		private string _Surname;
		
		private string _Name;
		
		private string _Patronymic;
		
		private System.DateTime _DtOfBirth;
		
		private string _Address;
		
		private System.DateTime _DtHired;
		
		private System.Nullable<System.DateTime> _DtDismissed;
		
		private string _PhoneNumber;
		
		private string _Email;
		
		private string _Room;
		
		private string _TabelianNumber;
		
		private EntitySet<EmployeeSkills> _EmployeeSkills;
		
		private EntityRef<Departaments> _Departaments;
		
		private EntityRef<Positions> _Positions;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployeeUidChanging(System.Guid value);
    partial void OnEmployeeUidChanged();
    partial void OnDepartamentUidChanging(System.Guid value);
    partial void OnDepartamentUidChanged();
    partial void OnPositionUidChanging(System.Guid value);
    partial void OnPositionUidChanged();
    partial void OnSurnameChanging(string value);
    partial void OnSurnameChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPatronymicChanging(string value);
    partial void OnPatronymicChanged();
    partial void OnDtOfBirthChanging(System.DateTime value);
    partial void OnDtOfBirthChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnDtHiredChanging(System.DateTime value);
    partial void OnDtHiredChanged();
    partial void OnDtDismissedChanging(System.Nullable<System.DateTime> value);
    partial void OnDtDismissedChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnRoomChanging(string value);
    partial void OnRoomChanged();
    partial void OnTabelianNumberChanging(string value);
    partial void OnTabelianNumberChanged();
    #endregion
		
		public Employees()
		{
			this._EmployeeSkills = new EntitySet<EmployeeSkills>(new Action<EmployeeSkills>(this.attach_EmployeeSkills), new Action<EmployeeSkills>(this.detach_EmployeeSkills));
			this._Departaments = default(EntityRef<Departaments>);
			this._Positions = default(EntityRef<Positions>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeUid", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid EmployeeUid
		{
			get
			{
				return this._EmployeeUid;
			}
			set
			{
				if ((this._EmployeeUid != value))
				{
					this.OnEmployeeUidChanging(value);
					this.SendPropertyChanging();
					this._EmployeeUid = value;
					this.SendPropertyChanged("EmployeeUid");
					this.OnEmployeeUidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartamentUid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid DepartamentUid
		{
			get
			{
				return this._DepartamentUid;
			}
			set
			{
				if ((this._DepartamentUid != value))
				{
					if (this._Departaments.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartamentUidChanging(value);
					this.SendPropertyChanging();
					this._DepartamentUid = value;
					this.SendPropertyChanged("DepartamentUid");
					this.OnDepartamentUidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PositionUid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PositionUid
		{
			get
			{
				return this._PositionUid;
			}
			set
			{
				if ((this._PositionUid != value))
				{
					if (this._Positions.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPositionUidChanging(value);
					this.SendPropertyChanging();
					this._PositionUid = value;
					this.SendPropertyChanged("PositionUid");
					this.OnPositionUidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Surname", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Surname
		{
			get
			{
				return this._Surname;
			}
			set
			{
				if ((this._Surname != value))
				{
					this.OnSurnameChanging(value);
					this.SendPropertyChanging();
					this._Surname = value;
					this.SendPropertyChanged("Surname");
					this.OnSurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Patronymic", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Patronymic
		{
			get
			{
				return this._Patronymic;
			}
			set
			{
				if ((this._Patronymic != value))
				{
					this.OnPatronymicChanging(value);
					this.SendPropertyChanging();
					this._Patronymic = value;
					this.SendPropertyChanged("Patronymic");
					this.OnPatronymicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DtOfBirth", DbType="Date NOT NULL")]
		public System.DateTime DtOfBirth
		{
			get
			{
				return this._DtOfBirth;
			}
			set
			{
				if ((this._DtOfBirth != value))
				{
					this.OnDtOfBirthChanging(value);
					this.SendPropertyChanging();
					this._DtOfBirth = value;
					this.SendPropertyChanged("DtOfBirth");
					this.OnDtOfBirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(300)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DtHired", DbType="Date NOT NULL")]
		public System.DateTime DtHired
		{
			get
			{
				return this._DtHired;
			}
			set
			{
				if ((this._DtHired != value))
				{
					this.OnDtHiredChanging(value);
					this.SendPropertyChanging();
					this._DtHired = value;
					this.SendPropertyChanged("DtHired");
					this.OnDtHiredChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DtDismissed", DbType="Date")]
		public System.Nullable<System.DateTime> DtDismissed
		{
			get
			{
				return this._DtDismissed;
			}
			set
			{
				if ((this._DtDismissed != value))
				{
					this.OnDtDismissedChanging(value);
					this.SendPropertyChanging();
					this._DtDismissed = value;
					this.SendPropertyChanged("DtDismissed");
					this.OnDtDismissedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="VarChar(30)")]
		public string PhoneNumber
		{
			get
			{
				return this._PhoneNumber;
			}
			set
			{
				if ((this._PhoneNumber != value))
				{
					this.OnPhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._PhoneNumber = value;
					this.SendPropertyChanged("PhoneNumber");
					this.OnPhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Room", DbType="VarChar(15)")]
		public string Room
		{
			get
			{
				return this._Room;
			}
			set
			{
				if ((this._Room != value))
				{
					this.OnRoomChanging(value);
					this.SendPropertyChanging();
					this._Room = value;
					this.SendPropertyChanged("Room");
					this.OnRoomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TabelianNumber", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string TabelianNumber
		{
			get
			{
				return this._TabelianNumber;
			}
			set
			{
				if ((this._TabelianNumber != value))
				{
					this.OnTabelianNumberChanging(value);
					this.SendPropertyChanging();
					this._TabelianNumber = value;
					this.SendPropertyChanged("TabelianNumber");
					this.OnTabelianNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employees_EmployeeSkills", Storage="_EmployeeSkills", ThisKey="EmployeeUid", OtherKey="EmployeeUid")]
		public EntitySet<EmployeeSkills> EmployeeSkills
		{
			get
			{
				return this._EmployeeSkills;
			}
			set
			{
				this._EmployeeSkills.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Departaments_Employees", Storage="_Departaments", ThisKey="DepartamentUid", OtherKey="DepartamentUid", IsForeignKey=true)]
		public Departaments Departaments
		{
			get
			{
				return this._Departaments.Entity;
			}
			set
			{
				Departaments previousValue = this._Departaments.Entity;
				if (((previousValue != value) 
							|| (this._Departaments.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Departaments.Entity = null;
						previousValue.Employees.Remove(this);
					}
					this._Departaments.Entity = value;
					if ((value != null))
					{
						value.Employees.Add(this);
						this._DepartamentUid = value.DepartamentUid;
					}
					else
					{
						this._DepartamentUid = default(System.Guid);
					}
					this.SendPropertyChanged("Departaments");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Positions_Employees", Storage="_Positions", ThisKey="PositionUid", OtherKey="PositionUid", IsForeignKey=true)]
		public Positions Positions
		{
			get
			{
				return this._Positions.Entity;
			}
			set
			{
				Positions previousValue = this._Positions.Entity;
				if (((previousValue != value) 
							|| (this._Positions.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Positions.Entity = null;
						previousValue.Employees.Remove(this);
					}
					this._Positions.Entity = value;
					if ((value != null))
					{
						value.Employees.Add(this);
						this._PositionUid = value.PositionUid;
					}
					else
					{
						this._PositionUid = default(System.Guid);
					}
					this.SendPropertyChanged("Positions");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EmployeeSkills(EmployeeSkills entity)
		{
			this.SendPropertyChanging();
			entity.Employees = this;
		}
		
		private void detach_EmployeeSkills(EmployeeSkills entity)
		{
			this.SendPropertyChanging();
			entity.Employees = null;
		}
	}
}
#pragma warning restore 1591
